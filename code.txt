

### `client/src/App.jsx`
```jsx
import React from 'react';
import Header from './components/Header';
import Dashboard from './pages/Dashboard';

function App() {
  return (
    <div>
      <Header />
      <Dashboard />
    </div>
  );
}

export default App;
```

### `client/src/components/Header.jsx`
```jsx
import React from 'react';

const Header = () => (
  <header>
    <h1>Smart DevOps Dashboard</h1>
  </header>
);

export default Header;
```

### `client/src/pages/Dashboard.jsx`
```jsx
import React, { useEffect, useState } from 'react';
import axios from 'axios';

const Dashboard = () => {
  const [metrics, setMetrics] = useState([]);

  useEffect(() => {
    axios.get('/api/metrics')
      .then(res => setMetrics(res.data))
      .catch(err => console.error(err));
  }, []);

  return (
    <div>
      <h2>Build Metrics</h2>
      <pre>{JSON.stringify(metrics, null, 2)}</pre>
    </div>
  );
};

export default Dashboard;
```

### `server/index.js`
```js
const express = require('express');
const app = express();
const metricsRoutes = require('./routes/metrics');

app.use(express.json());
app.use('/api/metrics', metricsRoutes);

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
```

### `server/routes/metrics.js`
```js
const express = require('express');
const router = express.Router();
const { getMetrics } = require('../controllers/metricsController');

router.get('/', getMetrics);

module.exports = router;
```

### `server/controllers/metricsController.js`
```js
exports.getMetrics = (req, res) => {
  res.json([
    { build: 'Build #1', status: 'Success', duration: '5m 12s' },
    { build: 'Build #2', status: 'Failed', duration: '2m 43s' }
  ]);
};
```

---